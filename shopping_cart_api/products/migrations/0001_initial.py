# Generated by Django 4.1.3 on 2022-11-29 09:24

import autoslug.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='Category name')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent_category',
                 mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                            related_name='subcategories', to='products.category',
                                            verbose_name='Parent category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Product name')),
                ('slug',
                 autoslug.fields.AutoSlugField(editable=False, max_length=256, populate_from='name', unique=True,
                                               verbose_name='Product slug')),
                ('description', models.TextField(verbose_name='Product description')),
                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(0)],
                                            verbose_name='Product price')),
                ('rating', models.FloatField(validators=[django.core.validators.MinValueValidator(0),
                                                         django.core.validators.MaxValueValidator(5)],
                                             verbose_name='Product rating')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products',
                                               to='products.category', verbose_name='Product category')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.AddConstraint(
            model_name='category',
            constraint=models.CheckConstraint(check=models.Q(('level__lte', 2)), name='depth_level_is_lte_2'),
        ),
        migrations.RunSQL(
            """
            CREATE OR REPLACE FUNCTION check_category_level() RETURNS TRIGGER AS $$
            BEGIN
                IF (SELECT level
                FROM products_category
                WHERE id = NEW.category_id) < 2 THEN
                    RAISE EXCEPTION 'The product category must be the second level or higher.' USING ERRCODE = '23503';
                END IF;
                RETURN NEW;
            END
            $$ LANGUAGE plpgsql;
    
            CREATE TRIGGER check_product_category_level 
            BEFORE INSERT OR UPDATE ON products_product
            FOR EACH ROW EXECUTE PROCEDURE check_category_level();
            """
        ),
    ]
